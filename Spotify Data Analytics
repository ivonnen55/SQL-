// For this project I downloaded a spotify dataset from kaggle, 
created a table, and explored the data using SQL.//

//creating the table//

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

//using sql to analyze data, utilizing Common Table Expressions//

1. What is the average dancability by artist and track?

SELECT 
AVG(danceability), artist_name, track_name
FROM SpotifyData
GROUP BY artist_name, track_name;

2. Who are the top 10 artists based on popularity?

SELECT popularity, artist_name
FROM Spotifydata
ORDER BY popularity DESC
limit 10

3. What artist released the longest track?

SELECT 
MAX(duration_ms), artist_name, track_name
FROM Spotifydata ;

4. What is the average danceability for the top 10 songs?

WITH avg_dance_cte AS
( SELECT
danceability AS avg_dance, popularity
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10)

SELECT 
AVG(avg_dance)
FROM avg_dance_cte;

5. Calculate the average popularity for the artists. 
For every artist with an average popularity of 90 or above, show their name,
average popularity, and label as “Top Star”.

WITH popularity_average_CTE AS (
SELECT artist_name,
AVG(popularity) AS average_popularity
FROM SpotifyData 
GROUP BY artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
